#ifndef __PHOTONJET_H__
#define __PHOTONJET_H__

#include <fun4all/SubsysReco.h>
#include <vector>

#include <TFile.h>
#include <TH1.h>
#include <TH2.h>
#include <TMath.h>
#include <TTree.h>

class MyClass {
//Declare Leaf Types
Int_t           m_event;
Int_t           id;
Int_t           nComponent;
Float_t         eta;
Float_t         phi;
Float_t         e;
Float_t         pt;
Int_t           truthID;
Int_t           truthNComponent;
Float_t         truthEta;
Float_t         truthPhi;
Float_t         truthE;
Float_t         truthPt;
Int_t           nMatchedTrack;

//Eta Cuts
int etalow;
int etahigh;
void set_eta_lowhigh(float low, float high)
{
  etalow = low;
  etahigh = high;
};

 void test_function();
 
/*  void set_pT_Binning() */
/*  {   */
   
/*  } */

 
/*  Truth_pT_Array[0]; */


/* float bin_width = 0.5; */
/* float pT_min = 0.5; */
/* float pT_max = 10.0; */
/* int N_pT_Bins = int((pT_max - pT_min)/bin_width); */
/* fprintf(stderr, "%d: N_pT_Bins = %i\n",__LINE__,N_pT_Bins); */
/* float Truth_pT_Array[N_pT_Bins+1]; //edges                                                                                                                                 */
/* float pT_Centers[N_pT_Bins]; */
/* //std::vector<float> pT_Centers;                                                                                                                                           */

/* float pT_Widths[N_pT_Bins]; */

/* Truth_pT_Array[0] = pT_min; */

/* //minimum pT for Fitting JES and JER parametrization                                                                                                                       */
/* float Fit_pT_Min = 0; */


/* for (int ipt = 0; ipt < N_pT_Bins; ipt++){ */
/*   float pT_Truth = ipt*bin_width+pT_min; */
/*   float pT_Truth_plus = (ipt+1)*bin_width+pT_min; */
/*   pT_Centers[ipt] = pT_Truth + (pT_Truth_plus - pT_Truth)/2; */
/*   Truth_pT_Array[ipt+1] = pT_Truth_plus; */
/*   pT_Widths[ipt] = bin_width; */
/*  } */

}
